/*!
@weakgroup      test
@{
@file
@author         Luther Lee
@data           2023/10/25
@brief          Test array equality operator `==`.
@version
Portable Test and Stimulus Standard Version 2.1 <br>
> Section 7.9 : Collections <br>
> Section 7.9.2 : Arrays <br>


---------------------------------------------------------------------------------------------------

### Test Command
@code{.unparsed}
make gentarget
@endcode
*/
component pss_top {

    enum eSTR2NUM {
        ZERO, ONE, TWO
    };

    struct sSTR2NUM {
        string stringVal = "NULL";
        int intVal = 0;
    };

    action root_a {
        array<bit [4] , 2> nibbleArray_0 = {4'b0010, 4'b0011};
        array<int     , 2> intArray_0    = {2, 3};
        array<bool    , 2> boolArray_0   ;
        array<eSTR2NUM, 2> enumArray_0   ;
        array<string  , 2> stringArray_0 = {"A", "B"};
        // array<float32 , 2> float32Array_0;
        // array<float64 , 2> float64Array_0;
        array<sSTR2NUM, 2> structArray_0 ;
        array<array<int, 2>, 2> nestedArray = {{2, 3}, {4, 5}};

        bit [4]  nibbleArray_1  [2] = {4'b0010, 4'b0011};
        int      intArray_1     [2] = {2, 3};
        bool     boolArray_1    [2];
        eSTR2NUM enumArray_1    [2];
        string   stringArray_1  [2] = {"A", "B"};
        // float32  float32Array_1 [2];
        // float64  float64Array_1 [2];
        sSTR2NUM structArray_1  [2];

        bit nibbleArray_equ  = 0;
        bit intArray_equ     = 0;
        bit boolArray_equ    = 0;
        bit enumArray_equ    = 0;
        bit stringArray_equ  = 0;
        bit float32Array_equ = 0;
        bit float64Array_equ = 0;
        bit structArray_equ  = 0;
        exec post_solve {
            if (nibbleArray_0  == nibbleArray_1 ) nibbleArray_equ  = 1;
            if (intArray_0     == intArray_1    ) intArray_equ     = 1;
            if (boolArray_0    == boolArray_1   ) boolArray_equ    = 1;
            if (enumArray_0    == enumArray_1   ) enumArray_equ    = 1;
            if (stringArray_0  == stringArray_1 ) stringArray_equ  = 1;
            // if (float32Array_0 == float32Array_1) float32Array_equ = 1;
            // if (float64Array_0 == float64Array_1) float64Array_equ = 1;
            if (structArray_0  == structArray_1 ) structArray_equ  = 1;
        }

        exec body ASM =
"""
// test_array_operator_equality
nibbleArray_equ  = {{nibbleArray_equ}}
intArray_equ     = {{intArray_equ}}
boolArray_equ    = {{boolArray_equ}}
enumArray_equ    = {{enumArray_equ}}
stringArray_equ  = {{stringArray_equ}}
structArray_equ  = {{structArray_equ}}
""";
    }
}

/**@}*/
