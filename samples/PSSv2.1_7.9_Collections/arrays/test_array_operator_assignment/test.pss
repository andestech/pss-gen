/*!
@weakgroup      test
@{
@file
@author         Luther Lee
@data           2023/10/25
@brief          Test array assignment operator `=`.
@version
Portable Test and Stimulus Standard Version 2.1 <br>
> Section 7.9 : Collections <br>
> Section 7.9.2 : Arrays <br>


---------------------------------------------------------------------------------------------------

### Test Command
@code{.unparsed}
make gentarget
@endcode
*/
component pss_top {

    enum eSTR2NUM {
        ZERO, ONE, TWO
    };

    struct sSTR2NUM {
        string stringVal = "NULL";
        int intVal = 0;
    };

    action root_a {
        array<bit [4] , 2> nibbleArray_0 ;
        array<int     , 2> intArray_0    ;
        array<bool    , 2> boolArray_0   ;
        array<eSTR2NUM, 2> enumArray_0   ;
        array<string  , 2> stringArray_0 ;
        // array<float32 , 2> float32Array_0;
        // array<float64 , 2> float64Array_0;
        array<sSTR2NUM, 2> structArray_0 ;
        array<array<int, 2>, 2> nestedArray;

        bit [4]  nibbleArray_1  [2];
        int      intArray_1     [2];
        bool     boolArray_1    [2];
        eSTR2NUM enumArray_1    [2];
        string   stringArray_1  [2];
        // float32  float32Array_1 [2];
        // float64  float64Array_1 [2];
        sSTR2NUM structArray_1  [2];

        sSTR2NUM dummyStruct;

        exec pre_solve {
            nibbleArray_0  = {4'b0010, 4'b0011};
            intArray_0     = {2, 3};
            // boolArray_0    = {true, false};
            // enumArray_0    = {TWO, ONE};
            stringArray_0  = {"A", "B"};
            // float32Array_0 = {2.2, 2.3};
            // float64Array_0 = {3.3, 3.4};
            // structArray_0  = {dummyStruct, dummyStruct};
        }

        bit [4]  nibbleVal ;
        int      intVal    ;
        bool     boolVal   ;
        eSTR2NUM enumVal   ;
        string   stringVal ;
        // float32  float32Val;
        // float64  float64Val;
        sSTR2NUM structVal ;
        exec post_solve {
            nibbleVal  = nibbleArray_0  [0];
            intVal     = intArray_0     [0];
            // boolVal    = boolArray_0    [0];
            // enumVal    = enumArray_0    [0];
            stringVal  = stringArray_0  [0];
            // float32Val = float32Array_0 [0];
            // float64Val = float64Array_0 [0];
            // structVal  = structArray_0  [0];
        }

        exec body ASM =
"""
// test_array_operator_assignment
nibbleVal  = {{nibbleVal}}
intVal     = {{intVal}}
stringVal  = {{stringVal}}
""";
    }
}

/**@}*/
