/*!
@weakgroup      test
@{
@file
@author         Luther Lee
@data           2023/10/25
@brief          Test array `foreach` statement.
@version
Portable Test and Stimulus Standard Version 2.1 <br>
> Section 7.9 : Collections <br>
> Section 7.9.2 : Arrays <br>


---------------------------------------------------------------------------------------------------

### Test Command
@code{.unparsed}
make gentarget
@endcode
*/
component pss_top {

    enum eSTR2NUM {
        ZERO, ONE, TWO
    };

    struct sSTR2NUM {
        string stringVal = "NULL";
        int intVal = 0;
    };

    action root_a {
        array<bit [4] , 2> nibbleArray_0 = {4'b0010, 4'b0011};
        array<int     , 2> intArray_0    = {2, 3};
        array<bool    , 2> boolArray_0   ;
        array<eSTR2NUM, 2> enumArray_0   ;
        array<string  , 2> stringArray_0 = {"A", "B"};
        // array<float32 , 2> float32Array_0;
        // array<float64 , 2> float64Array_0;
        array<sSTR2NUM, 2> structArray_0 ;
        array<array<int, 2>, 2> nestedArray = {{2, 3}, {4, 5}};

        bit [4]  nibbleArray_1  [2] = {4'b0010, 4'b0011};
        int      intArray_1     [2] = {2, 3};
        bool     boolArray_1    [2];
        eSTR2NUM enumArray_1    [2];
        string   stringArray_1  [2] = {"A", "B"};
        // float32  float32Array_1 [2];
        // float64  float64Array_1 [2];
        sSTR2NUM structArray_1  [2];

        bit [4]  nibbleVal ;
        int      intVal    ;
        bool     boolVal   ;
        eSTR2NUM enumVal   ;
        string   stringVal ;
        // float32  float32Val;
        // float64  float64Val;
        sSTR2NUM structVal ;
        exec post_solve {
            foreach (i : nibbleArray_0  [j]) nibbleVal  = i;
            foreach (i : intArray_0     [j]) intVal     = i;
            // foreach (i : boolArray_0    [j]) boolVal    = i;
            // foreach (i : enumArray_0    [j]) enumVal    = i;
            foreach (i : stringArray_0  [j]) stringVal  = i;
            // foreach (i : float32Array_0 [j]) float32Val = i;
            // foreach (i : float64Array_0 [j]) float64Val = i;
            // foreach (i : structArray_0  [j]) structVal  = i;
        }

        exec body ASM =
"""
// test_array_operator_foreach
nibbleVal  = {{nibbleVal}}
intVal     = {{intVal}}
stringVal  = {{stringVal}}
""";
    }
}

/**@}*/
